{"version":3,"sources":["use-auth.tsx","Home.tsx","Login.tsx","Register.tsx","Account.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultUser","id","username","email","displayName","initialContext","authenticated","user","signin","userIdentifier","password","Promise","resolve","success","error","field","signup","state","signout","update","authContext","createContext","ProvideAuth","children","auth","useState","setUser","setAuthenticated","a","axios","post","withCredentials","res","data","console","log","get","put","response","useEffect","useProvideAuth","Provider","value","useAuth","useContext","Alert","props","elevation","variant","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","submit","margin","Post","withStyles","root","color","TextField","Home","classes","newPost","setNewPost","showNewPostMessage","setShowNewPostMessage","posts","setPosts","then","Container","maxWidth","className","autoComplete","name","fullWidth","label","autoFocus","multiline","minRows","onChange","e","target","Button","type","onClick","preventDefault","content","Snackbar","open","autoHideDuration","severity","onClose","Typography","Grid","container","map","item","xs","owner","date","disabled","InputProps","endAdornment","InputAdornment","position","likes","length","includes","IconButton","FavoriteRounded","FavoriteBorderRounded","avatar","backgroundColor","palette","primary","main","form","width","Login","history","useHistory","setUserIdentifier","userIdentifierError","setUserIdentifierError","userIdentifierHelperText","setUserIdentifierHelperText","setPassword","passwordError","setPasswordError","passwordHelperText","setPasswordHelperText","push","Avatar","LockOutlined","component","noValidate","required","helperText","size","fieldFix","Register","React","values","setValues","message","setError","showPassword","setShowPassword","handleChange","prop","event","sm","startAdornment","placeholder","FormControl","InputLabel","htmlFor","OutlinedInput","onMouseDown","edge","Visibility","VisibilityOff","labelWidth","FormHelperText","Account","apiResponse","setApiResponse","AccountCircleOutlined","createStyles","flexGrow","menuButton","marginRight","title","App","anchorEl","setAnchorEl","Boolean","handleClose","AppBar","Toolbar","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","defaults","baseURL","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.6b56dc8d.chunk.js","sourcesContent":["// use-auth.tsx\r\n// Heavily inspired by:\r\n// https://usehooks.com/useAuth/\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\ntype User = {\r\n    id: number,\r\n    username: string,\r\n    email: string,\r\n    displayName: string\r\n};\r\n\r\nconst defaultUser: User = { id: -1, username: '', email: '', displayName: '' }\r\n\r\nexport interface FieldSpecificAPIResponse {\r\n    success: boolean,\r\n    error: string,\r\n    field: string\r\n}\r\n\r\nexport interface UserState {\r\n    displayName: string;\r\n    username: string;\r\n    email: string\r\n    password: string;\r\n}\r\n\r\ninterface UseAuthContext {\r\n    authenticated: boolean\r\n    user: User,\r\n    signin(email: string, password: string): Promise<FieldSpecificAPIResponse>,\r\n    signup(state: UserState): Promise<FieldSpecificAPIResponse>,\r\n    signout(): void,\r\n    update(state: UserState): Promise<FieldSpecificAPIResponse>\r\n}\r\n\r\nconst initialContext: UseAuthContext = {\r\n    authenticated: false,\r\n    user: defaultUser,\r\n    signin: (userIdentifier: string, password: string) => Promise.resolve({ success: false, error: '', field: '' }),\r\n    signup: (state: UserState) => Promise.resolve({ success: false, error: '', field: '' }),\r\n    signout: () => { },\r\n    update: (state: UserState) => Promise.resolve({ success: false, error: '', field: '' }),\r\n}\r\n\r\nconst authContext = createContext(initialContext);\r\n\r\n// Provider component that wraps your app and makes auth object ...\r\n// ... available to any child component that calls useAuth().\r\nexport function ProvideAuth({ children }: { children: any }) {\r\n    const auth = useProvideAuth();\r\n    return <authContext.Provider value={auth}> {children} </authContext.Provider>;\r\n}\r\n\r\n// Hook for child components to get the auth object ...\r\n// ... and re-render when it changes.\r\nexport const useAuth = () => {\r\n    return useContext(authContext);\r\n};\r\n\r\n// Provider hook that creates auth object and handles state\r\nfunction useProvideAuth(): UseAuthContext {\r\n    const [user, setUser] = useState<User>(defaultUser);\r\n\r\n    const [authenticated, setAuthenticated] = useState<boolean>(false);\r\n\r\n    const signin = async (userIdentifier: string, password: string) => {\r\n        const res = await axios.post('/login', { userIdentifier, password }, { withCredentials: true });\r\n        if (res.data.success) {\r\n            setAuthenticated(true);\r\n            setUser(res.data.user);\r\n        }\r\n        return {\r\n            success: res.data.success,\r\n            error: res.data.error || '',\r\n            field: res.data.field || '',\r\n        }\r\n    };\r\n\r\n    const signup = async (state: UserState) => {\r\n        console.log(state)\r\n        const res = await axios.post('/register', state, { withCredentials: true });\r\n        if (res.data.success) {\r\n            setAuthenticated(true);\r\n            setUser(res.data.user);\r\n        }\r\n\r\n        return {\r\n            success: res.data.success,\r\n            error: res.data.error || '',\r\n            field: res.data.field || '',\r\n        }\r\n    };\r\n\r\n    const signout = () => {\r\n        axios.get('/logout');\r\n        setAuthenticated(false);\r\n        setUser(defaultUser);\r\n        return\r\n    };\r\n\r\n    const update = async (state: UserState) => {\r\n        console.log(state);\r\n        const response = await axios.put('/user', state, { withCredentials: true });\r\n        if(response.data.success) {\r\n            setUser({\r\n                id: user.id,\r\n                username: state.username,\r\n                email: state.email,\r\n                displayName: state.displayName,\r\n            });\r\n        }\r\n\r\n        return {\r\n            success: response.data.success,\r\n            error: response.data.error || '',\r\n            field: response.data.field || '',\r\n        }\r\n    }\r\n\r\n    // Subscribe to user on mount\r\n    // Because this sets state in the callback it will cause any ...\r\n    // ... component that utilizes this hook to re-render with the ...\r\n    // ... latest auth object.\r\n    useEffect(() => {\r\n        // Cleanup subscription on unmount\r\n        return () => setUser(defaultUser);\r\n    }, []);\r\n    // Return the user object and auth methods\r\n    return {\r\n        authenticated,\r\n        user,\r\n        signin,\r\n        signup,\r\n        signout,\r\n        update,\r\n    };\r\n}","import { Button, Container, Grid, IconButton, InputAdornment, makeStyles, Snackbar, TextField, Typography, withStyles } from \"@material-ui/core\"\r\nimport { FavoriteBorderRounded, FavoriteRounded } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./use-auth\"\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(2, 0, 2),\r\n    },\r\n}));\r\n\r\ninterface PostInterface {\r\n    content: string,\r\n    date: Date,\r\n    id: number,\r\n    likes: Array<number>,\r\n    owner: {\r\n        displayName: string,\r\n        id: number,\r\n        username: string,\r\n    },\r\n}\r\n\r\nconst Post = withStyles({\r\n    root: {\r\n        \"& .MuiInputBase-root.Mui-disabled\": {\r\n            color: \"black\" // (default alpha is 0.38)\r\n        }\r\n    },\r\n})(TextField);\r\n\r\nfunction Home() {\r\n\r\n    const auth = useAuth();\r\n    const classes = useStyles();\r\n\r\n    const [newPost, setNewPost] = useState('');\r\n    const [showNewPostMessage, setShowNewPostMessage] = useState(false);\r\n    const [posts, setPosts] = useState<Array<PostInterface>>([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/posts').then(res => setPosts(res.data.posts))\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <div className={classes.paper}>\r\n                {auth.authenticated ? <>\r\n                    <TextField\r\n                        autoComplete='off'\r\n                        name='newPost'\r\n                        variant='outlined'\r\n                        fullWidth\r\n                        id='newPost'\r\n                        label='New post'\r\n                        autoFocus\r\n                        multiline\r\n                        minRows={3}\r\n                        value={newPost}\r\n                        onChange={(e) => setNewPost(e.target.value)}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            (async () => {\r\n                                const response = await axios.post('/post', { content: newPost }, { withCredentials: true });\r\n                                if (response.data.success === true) {\r\n                                    setShowNewPostMessage(true)\r\n                                    setNewPost('');\r\n                                    axios.get('/posts').then(res => setPosts(res.data.posts))\r\n                                }\r\n                            })();\r\n                        }}\r\n                    >\r\n                        Post\r\n                    </Button>\r\n                    <Snackbar open={showNewPostMessage} autoHideDuration={6000}>\r\n                        <Alert severity=\"info\" onClose={() => { setShowNewPostMessage(false) }}>\r\n                            New post created!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </> : <></>\r\n                }\r\n                <Typography><strong>Latest posts</strong></Typography>\r\n                <br />\r\n                <Grid container spacing={2}>\r\n                    {\r\n                        posts.map((post) => {\r\n                            return (\r\n                                <Grid item xs={12}>\r\n                                    <Post\r\n                                        autoComplete='off'\r\n                                        variant='outlined'\r\n                                        fullWidth\r\n                                        label={`${post.owner.displayName} <@${post.owner.username}> at ${post.date}`}\r\n                                        multiline\r\n                                        minRows={3}\r\n                                        value={post.content}\r\n                                        disabled\r\n                                        InputProps={{\r\n                                            endAdornment:\r\n                                                <InputAdornment position=\"end\">\r\n                                                    {post.likes.length}\r\n                                                    {\r\n                                                        post.likes.includes(auth.user.id) ?\r\n                                                            <IconButton color=\"secondary\"\r\n                                                                onClick={(e) => {\r\n                                                                    e.preventDefault()\r\n                                                                    axios.post('/unlike', { post: post.id }, { withCredentials: true }).then(() => axios.get('/posts').then(res => setPosts(res.data.posts)))\r\n                                                                }}\r\n                                                            >\r\n                                                                <FavoriteRounded />\r\n                                                            </IconButton>\r\n                                                            :\r\n                                                            <IconButton\r\n                                                                onClick={(e) => {\r\n                                                                    e.preventDefault()\r\n                                                                    axios.post('/like', { post: post.id }, { withCredentials: true }).then(() => axios.get('/posts').then(res => setPosts(res.data.posts)))\r\n                                                                }}\r\n                                                            >\r\n                                                                <FavoriteBorderRounded />\r\n                                                            </IconButton>\r\n                                                    }\r\n\r\n                                                </InputAdornment>\r\n                                        }}\r\n                                    />\r\n                                </Grid>);\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import { Avatar, Button, Container, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport { LockOutlined } from \"@material-ui/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"./use-auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(2, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction Login() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const auth = useAuth();\r\n\r\n    const [userIdentifier, setUserIdentifier] = useState('');\r\n    const [userIdentifierError, setUserIdentifierError] = useState(false);\r\n    const [userIdentifierHelperText, setUserIdentifierHelperText] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [passwordHelperText, setPasswordHelperText] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticated)\r\n            history.push('/')\r\n    }, [auth, history])\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Login\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"userIdentifier\"\r\n                        label=\"Username or email\"\r\n                        name=\"userIdentifier\"\r\n                        autoComplete=\"on\"\r\n                        autoFocus\r\n                        value={userIdentifier}\r\n                        onChange={(e) => setUserIdentifier(e.target.value)}\r\n                        error={userIdentifierError}\r\n                        helperText={userIdentifierHelperText}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        error={passwordError}\r\n                        helperText={passwordHelperText}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        size=\"large\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setUserIdentifierError(false);\r\n                            setUserIdentifierHelperText('');\r\n                            setPasswordError(false);\r\n                            setPasswordHelperText('');\r\n                            (async () => {\r\n                                const response = await auth.signin(userIdentifier, password);\r\n                                switch (response.field) {\r\n                                    case 'userIdentifier':\r\n                                        setUserIdentifierError(true);\r\n                                        setUserIdentifierHelperText(response.error)\r\n                                        break;\r\n                                    case 'password':\r\n                                        setPasswordError(true);\r\n                                        setPasswordHelperText(response.error)\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                };\r\n                            })()\r\n                        }}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n\r\n        </Container>)\r\n}\r\n\r\nexport default Login","import { Typography, makeStyles, Container, Avatar, TextField, Grid, InputAdornment, FormControl, InputLabel, OutlinedInput, IconButton, Button, FormHelperText } from \"@material-ui/core\"\r\nimport { LockOutlined, Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { UserState, useAuth } from \"./use-auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    fieldFix: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(2, 0, 2),\r\n    },\r\n}));\r\n\r\ninterface ErrorField {\r\n    field: string,\r\n    message: string,\r\n}\r\n\r\nfunction Register() {\r\n\r\n    const auth = useAuth();\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = React.useState<UserState>({\r\n        displayName: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const [error, setError] = React.useState<ErrorField>({\r\n        field: '',\r\n        message: '',\r\n    })\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const handleChange = (prop: keyof UserState) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticated)\r\n            history.push('/')\r\n    }, [auth, history])\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"name\"\r\n                                name=\"displayName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"displayName\"\r\n                                label=\"Name\"\r\n                                autoFocus\r\n                                value={values.displayName}\r\n                                onChange={handleChange('displayName')}\r\n                                error={error.field === 'displayName'}\r\n                                helperText={error.field === 'displayName' ? error.message : ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"username\"\r\n                                name=\"username\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">@</InputAdornment>,\r\n                                    placeholder: 'super.cool.username'\r\n                                }}\r\n                                value={values.username}\r\n                                onChange={handleChange('username')}\r\n                                error={error.field === 'username'}\r\n                                helperText={error.field === 'username' ? error.message : ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField className={classes.fieldFix}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange('email')}\r\n                                error={error.field === 'email'}\r\n                                helperText={error.field === 'email' ? error.message : ''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl variant=\"outlined\" fullWidth>\r\n                                <InputLabel\r\n                                    htmlFor=\"outlined-adornment-password\"\r\n                                    error={error.field === 'password'}\r\n                                >\r\n                                    Password\r\n                                </InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-password\"\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    value={values.password}\r\n                                    onChange={handleChange('password')}\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    labelWidth={70}\r\n                                    error={error.field === 'password'}\r\n                                />\r\n                                <FormHelperText\r\n                                    error={error.field === 'password'}\r\n                                >{error.field === 'password' ? error.message : ''}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        size=\"large\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setError({\r\n                                field: '',\r\n                                message: '',\r\n                            });\r\n                            (async () => {\r\n                                const response = await auth.signup(values);\r\n                                setError({\r\n                                    field: response.field,\r\n                                    message: response.error,\r\n                                });\r\n                            })()\r\n\r\n                        }}\r\n                    >\r\n                        Register\r\n                    </Button>\r\n                    <Typography variant=\"caption\">By registering you agree to the use of cookies</Typography>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register","import { Avatar, Button, Container, FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, makeStyles, OutlinedInput, Snackbar, TextField, Typography } from \"@material-ui/core\"\r\nimport { AccountCircleOutlined, Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FieldSpecificAPIResponse, useAuth, UserState } from \"./use-auth\";\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(5),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(2, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction Account() {\r\n\r\n    const classes = useStyles();\r\n    const auth = useAuth();\r\n    const history = useHistory();\r\n\r\n    const [values, setValues] = useState<UserState>({\r\n        displayName: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const [apiResponse, setApiResponse] = useState<FieldSpecificAPIResponse>({\r\n        success: false,\r\n        field: '',\r\n        error: '',\r\n    })\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleChange = (prop: keyof UserState) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!auth.authenticated)\r\n            history.push('/login')\r\n    }, [auth, history]);\r\n\r\n    useEffect(() => {\r\n\r\n        setValues({\r\n            username: auth.user.username,\r\n            email: auth.user.email,\r\n            displayName: auth.user.displayName,\r\n            password: '',\r\n        });\r\n    }, [auth])\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <AccountCircleOutlined />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Your account\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        autoComplete=\"username\"\r\n                        name=\"username\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">@</InputAdornment>,\r\n                            placeholder: 'super.cool.username'\r\n                        }}\r\n                        value={values.username}\r\n                        onChange={handleChange('username')}\r\n                        error={apiResponse.field === 'username'}\r\n                        helperText={apiResponse.field === 'username' ? apiResponse.error : ''}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"email\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange('email')}\r\n                        error={apiResponse.field === 'email'}\r\n                        helperText={apiResponse.field === 'email' ? apiResponse.error : ''}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"displayName\"\r\n                        label=\"Name\"\r\n                        name=\"displayName\"\r\n                        value={values.displayName}\r\n                        onChange={handleChange('displayName')}\r\n                    />\r\n                    <FormControl variant=\"outlined\" fullWidth margin=\"dense\">\r\n                        <InputLabel\r\n                            htmlFor=\"outlined-adornment-password\"\r\n                            error={apiResponse.field === 'password'}\r\n                        >\r\n                            New Password\r\n                        </InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            onChange={handleChange('password')}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            labelWidth={110}\r\n                            error={apiResponse.field === 'password'}\r\n                        />\r\n                        <FormHelperText\r\n                            error={apiResponse.field === 'password'}\r\n                        >\r\n                            {apiResponse.field === 'password' ? apiResponse.error : 'Leave empty to leave your password unchanged'}\r\n                        </FormHelperText>\r\n                    </FormControl>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        size=\"large\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            (async () => {\r\n                                const response = await auth.update(values);\r\n                                setApiResponse(response);\r\n                            })();\r\n                        }}\r\n                    >\r\n                        Update\r\n                    </Button>\r\n                    <Snackbar open={apiResponse.success} autoHideDuration={6000}>\r\n                        <Alert severity=\"success\" onClose={() => { setApiResponse({ success: false, field: '', error: '' }) }}>\r\n                            Account Updated!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </form>\r\n            </div>\r\n        </Container>)\r\n}\r\n\r\nexport default Account","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { Button, Toolbar, AppBar, Typography, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport { useAuth } from './use-auth';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Home from './Home';\nimport Login from './Login';\nimport Register from './Register';\nimport Account from './Account';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nfunction App() {\n\n  const classes = useStyles();\n  const auth = useAuth();\n  const history = useHistory();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" onClick={() => history.push('/')} className={classes.title}>\n            Flask is bad\n          </Typography>\n          {auth.authenticated ? (<div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={() => { handleClose(); history.push('/account') }}>My Account</MenuItem>\n              <MenuItem onClick={() => { handleClose(); auth.signout() }}>Logout</MenuItem>\n            </Menu>\n          </div>) : (<div>\n            <Button color=\"inherit\" onClick={() => history.push('/login')}>Login</Button>\n            <Button color=\"inherit\" onClick={() => history.push('/register')}>Register</Button>\n          </div>)}\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/account\">\n          <Account />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createTheme, MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { ProvideAuth } from './use-auth';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport axios from 'axios';\n\nconst theme = createTheme({});\n\naxios.defaults.baseURL = process.env.NODE_ENV === 'production' ? 'https://flaskisbad.com/api/v1' : 'http://localhost:5000/api/v1'\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline>\n      <ProvideAuth>\n        <Router>\n          <App />\n        </Router>\n      </ProvideAuth>\n    </CssBaseline>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}